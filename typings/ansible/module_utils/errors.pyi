"""
This type stub file was generated by pyright.
"""

__metaclass__ = type

class AnsibleFallbackNotFound(Exception):
    """Fallback validator was not found"""

    ...

class AnsibleValidationError(Exception):
    """Single argument spec validation error"""

    def __init__(self, message) -> None: ...
    @property
    def msg(self):  # -> Any:
        """The error message passed in when the exception was raised."""
        ...

class AnsibleValidationErrorMultiple(AnsibleValidationError):
    """Multiple argument spec validation errors"""

    def __init__(self, errors=...) -> None: ...
    def __getitem__(self, key): ...
    def __setitem__(self, key, value): ...
    def __delitem__(self, key): ...
    @property
    def msg(self):
        """The first message from the first error in ``errors``."""
        ...
    @property
    def messages(self):  # -> list[Unknown]:
        """:class:`list` of each error message in ``errors``."""
        ...
    def append(self, error):  # -> None:
        """Append a new error to ``self.errors``.

        Only :class:`AnsibleValidationError` should be added.
        """
        ...
    def extend(self, errors):  # -> None:
        """Append each item in ``errors`` to ``self.errors``. Only :class:`AnsibleValidationError` should be added."""
        ...

class AliasError(AnsibleValidationError):
    """Error handling aliases"""

    ...

class ArgumentTypeError(AnsibleValidationError):
    """Error with parameter type"""

    ...

class ArgumentValueError(AnsibleValidationError):
    """Error with parameter value"""

    ...

class ElementError(AnsibleValidationError):
    """Error when validating elements"""

    ...

class MutuallyExclusiveError(AnsibleValidationError):
    """Mutually exclusive parameters were supplied"""

    ...

class NoLogError(AnsibleValidationError):
    """Error converting no_log values"""

    ...

class RequiredByError(AnsibleValidationError):
    """Error with parameters that are required by other parameters"""

    ...

class RequiredDefaultError(AnsibleValidationError):
    """A required parameter was assigned a default value"""

    ...

class RequiredError(AnsibleValidationError):
    """Missing a required parameter"""

    ...

class RequiredIfError(AnsibleValidationError):
    """Error with conditionally required parameters"""

    ...

class RequiredOneOfError(AnsibleValidationError):
    """Error with parameters where at least one is required"""

    ...

class RequiredTogetherError(AnsibleValidationError):
    """Error with parameters that are required together"""

    ...

class SubParameterTypeError(AnsibleValidationError):
    """Incorrect type for subparameter"""

    ...

class UnsupportedError(AnsibleValidationError):
    """Unsupported parameters were supplied"""

    ...
